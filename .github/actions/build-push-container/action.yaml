name: Build & Push Container
description: Build container from Dockerfile and pushes to registry
inputs:
  image_name:
    required: true
    type: string
  registry:
    required: false
    type: string
    default: ghcr.io
  repository_owner:
    required: true
    type: string
  registry_username:
    required: true
    type: string
  registry_password:
    required: true
  
outputs:
  image_tag:
    description: "Image Tag"
    value: ${{ steps.values.outputs.image_tag }}
  image_version:
    description: "Image Version"
    value: ${{ steps.values.outputs.image_version }}
  buildtime:
    description: "Build Time"
    value: ${{ steps.values.outputs.buildtime }}

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: actions/checkout@v2
        
    - name: Prepare docker tags for image
      id: meta
      uses: docker/metadata-action@v3
      with:
        tags: type=sha
        
    - name: Print image information
      shell: bash
      run: |
        echo "image_name ${{ inputs.image_name }}"
        echo "tags ${{ steps.meta.outputs.tags }}"
        echo "labels ${{ steps.meta.outputs.labels }}"
        
    - name: Build from Dockerfile
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ inputs.image_name }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        dockerfiles: |
          ./Dockerfile

    - name: Push to registry
      id: push-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ inputs.registry }}/${{ inputs.repository_owner }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}
   
    - name: Print outputs
      shell: bash
      run: |
        echo "::set-output name=image_tag::${{ fromJSON(steps.meta.outputs.json).tags[0] }}"
        echo "::set-output name=image_version::${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"
        echo "::set-output name=buildtime::${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}"
