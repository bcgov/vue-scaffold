name: Build & Push Container
description: Build container from Dockerfile and pushes to registry
inputs:
  context:
    required: true
    type: string
  image_name:
    required: true
    type: string
  registry:
    required: true
    type: string
    default: ghcr.io
  registry_username:
    required: true
    type: string
  registry_password:
    required: true
  registry_username2:
    required: false
    type: string
  registry_password2:
    required: false
  
outputs:
  image_tag:
    description: "Image Tag"
    value: ${{ steps.values.outputs.image_tag }}
  image_version:
    description: "Image Version"
    value: ${{ steps.values.outputs.image_version }}
  buildtime:
    description: "Build Time"
    value: ${{ steps.values.outputs.buildtime }}

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: actions/checkout@v2
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}
        
    - name: Login to second container registry
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.registry_username2 }}
        password: ${{ inputs.registry_password2 }}

    - name: Prepare Docker tags for image
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ inputs.registry }}/${{ inputs.image_name }}
          ${{ inputs.image_name }}
        flavor: |
          latest=true
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push to registry
      id: builder
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - id: values  
      shell: bash
      run: |
        echo ${{ steps.meta.outputs.json }}
        echo "::set-output name=image_tag::${{ fromJSON(steps.meta.outputs.json).tags[0] }}"
        echo "::set-output name=image_version::${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"
        echo "::set-output name=buildtime::${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}"
